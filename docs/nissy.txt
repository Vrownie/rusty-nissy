
*******************************************************************************
********************* NISSY: a cube solver and FMC helper *********************
*******************************************************************************

If you just want to solve the cube, type 'solve' followed by the scramble. This
will not always give you an optimal solution, unless it is 10 moves or less or
you use the "o" option. Finding the optimal solution might take very long if it
is 16 moves or more, especially for the first time.

Now the fun stuff. With nissy you can save and manipulate move sequences, for
example:

nissy-# save R' U' F
$1:	R' U' F
nissy-# add L2D' $1
$1:	R' U' F L2 D'

You can then ask nissy to solve certain substepson a saved scramble:

nissy-# eo axis=rl $1
@1:	U D F' R (4)

And of course it uses also NISS, if you ask:

nissy-# eo niss axis=rl $1
@1:	(R) (1)

Notice that the sequences you save are marked with a $, while the "output"
sequences are marked with @. The difference between these two type of sequences
is that those marked with @ are temporary and get lost once you get new output.
Most commands accept as input either a move sequence typed out, a $-sequence or
a @-sequence. For example, you can however save a @-sequence and make it
persistent:

nissy-# save @1
$2:	(R)

Nissy also understands NISS. Let's see a more complicated example where you
save a scramble, ask for some EOs (using NISS) and then a DR on inverse:

nissy-# save R' U' F R U R2 F2 R2 D R2 U L2 U R2 D2 B' D U' R D R' D U2 F2 R' U' F
$3:	R' U' F R U R2 F2 R2 D R2 U L2 U R2 D2 B' D U' R D R' D U2 F2 R' U' F 
nissy-# eo n=10 niss axis=fb,rl $3
Found 10 results.
@1:	(U' L B D F) (5)
@2:	(U' L B' D F) (5)
@3:	(L B U D F) (5)
@4:	(L B' U D F) (5)
@5:	R U B U L (5)
@6:	R U' L (B L) (5)
@7:	R U' B U L (5)
@8:	R L (L B L) (5)
@9:	R (U2 D' F R) (5)
@10:	R (U2 F D' R) (5)
nissy-# add @6 $3
$3:	R' U' F R U R2 F2 R2 D R2 U L2 U R2 D2 B' D U' R D R' D U2 F2 R' U' F R U' L (B L) 
nissy-# unniss $3
@1:	L' B' R' U' F R U R2 F2 R2 D R2 U L2 U R2 D2 B' D U' R D R' D U2 F2 R' U' F R U' L 
nissy-# invert @1
@1:	L' U R' F' U R F2 U2 D' R D' R' U D' B D2 R2 U' L2 U' R2 D' R2 F2 R2 U' R' F' U R B L 
nissy-# save @1
$5:	L' U R' F' U R F2 U2 D' R D' R' U D' B D2 R2 U' L2 U' R2 D' R2 F2 R2 U' R' F' U R B L 
nissy-# dr from rl $5
@1:	F2 U D2 F' B D B (7)
nissy-# 

If you ask nissy to solve a substep (or the whole cube) using a sequence with
NISS as scramble, it will first un-NISS it (but without saving the unNISSed
scramble anywhere):

print $3
$3:	R' U' F R U R2 F2 R2 D R2 U L2 U R2 D2 B' D U' R D R' D U2 F2 R' U' F R U' L (B L) 
nissy-# solve $3
@1:	F U' R2 F2 U2 F U2 R2 L2 D R2 U B2 D' L2 D B2 D2 (18)

Nissy knows how to solve certain common sub-steps for DR (or Thistlethwaite /
Kociemba algorithms). For now it does know more common speedsolving methods.

For a full list of commands type "help". For a more detailed help on a specific
command, type "help (command)". The help pages can also be found in the docs
folder.

If you want to report a bug (I'm sure there are many!) or give a suggestion,
you can send an email to sebastiano.tronto@gmail.com.

Have fun!

